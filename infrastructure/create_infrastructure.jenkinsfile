pipeline {
    agent { node { label 'Ansible' } }
    options {
        ansiColor('xterm')
        timestamps () }
stages {
        stage('Create Infrastructure') {
            steps {
              script {
                sh """
                cd terraform
                terraform init
                terraform plan -out=tfplan -input=false
                """
                }
              script {
                def userInput = input(id: 'confirm', message: 'Apply Terraform?', parameters: [ [$class: 'BooleanParameterDefinition', defaultValue: false, description: 'Apply terraform', name: 'confirm'] ])
                }
            }
        }

        stage('Create Infrastructure Apply') {
            steps {
              script {
                sh '''cd terraform
                terraform apply -input=false tfplan
                sleep 30
                cd ../kubespray
                ansible-playbook -i ../terraform/hosts cluster.yml --become --user=ubuntu --private-key=/home/TMS-Project.pem'''
            }
          }
        }
}
}